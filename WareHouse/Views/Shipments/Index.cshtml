@using System.Security.Claims;
@{
    var isProcurementManagerOrAdmin = User.HasClaim(ClaimTypes.Role, "Администратор") == true || User.HasClaim(ClaimTypes.Role, "Менеджер по закупкам") == true;
}
<section id="shipments">
    <h2>Поставки</h2>
    <p>Список поставок.</p>
    @if (isProcurementManagerOrAdmin) 
    {
        <button class="btn btn-success mb-3" data-toggle="modal" data-target="#addShipmentModal">Добавить поставку</button>
        <button id="toggleHiddenBtn" class="btn @(ViewBag.ShowHidden ? "btn-info" : "btn-secondary") mb-3">
            <i class="fas @(ViewBag.ShowHidden ? "fa-eye-slash" : "fa-eye")"></i>
            @(ViewBag.ShowHidden ? "Показать активные" : "Показать скрытые")
        </button>
    }

    <div class="table-responsive">
        <table class="table table-bordered table-striped">
            <thead>
                <tr>
                    <th>ID</th>
                    <th>Дата</th>
                    <th>Статус</th>
                    <th>Пользователь</th>
                    <th>Товары</th>
                    @if (User.HasClaim(ClaimTypes.Role, "Кладовщик") || isProcurementManagerOrAdmin) 
                    {
                        <th>Действия</th>
                    }
                </tr>
            </thead>
            <tbody>
                @foreach (Shipment shipment in ViewBag.Shipments)
                {
                    <tr>
                        <td>@shipment.Id</td>
                        <td>@shipment.Date.ToShortDateString()</td>
                        <td>@shipment.Status.Name</td>
                        <td>@shipment.User.Surname @shipment.User.Name</td>
                        <td>
                            @if (shipment.Shipmentitems.Any())
                            {
                                <ul class="list-unstyled">
                                    @foreach (var item in shipment.Shipmentitems)
                                    {
                                        <li>@item.Product.Name - @item.Weight кг.</li>
                                    }
                                </ul>
                            }
                            else
                            {
                                <p>Нет товаров</p>
                            }
                        </td>
                        <td>
                            @* Кнопки для различных статусов поставки *@

                            @if (shipment.Statusid == 2) // Если "Пришла"
                            {
                                @if (User.HasClaim(ClaimTypes.Role, "Кладовщик") || isProcurementManagerOrAdmin)
                                {
                                    <form method="post" asp-action="ConfirmUnloading" asp-controller="Shipments" asp-route-id="@shipment.Id" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-success"><i class="fas fa-check"></i> Разгрузить поставку</button>
                                    </form>
                                }
                                @* Кнопка "Разгрузить поставку" *@

                            }
                            else if (shipment.Statusid == 3) // Если "Отменена"
                            {
                                @if (User.HasClaim(ClaimTypes.Role, "Администратор")) 
                                {
                                    <form method="post" asp-action="DeleteShipment" asp-controller="Shipments" asp-route-id="@shipment.Id" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-danger"><i class="fas fa-trash"></i> Удалить поставку</button>
                                    </form>
                                }

                            }
                            else if (shipment.Statusid == 4) // Если "Разгружена"
                            {
                                @if (User.HasClaim(ClaimTypes.Role, "Администратор")) 
                                {
                                    <form method="post" asp-action="DeleteShipment" asp-controller="Shipments" asp-route-id="@shipment.Id" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-secondary"><i class="fas fa-eye-slash"></i> Скрыть</button>
                                    </form>
                                }
                            }
                            else if (shipment.Statusid==6)
                            {

                            }
                            else 
                            {
                                @if (isProcurementManagerOrAdmin) 
                                {
                                    <button type="button" class="btn btn-sm btn-primary edit-product-btn" data-toggle="modal" data-target="#editShipmentModal"
                                            data-shipment-id="@shipment.Id"
                                            data-shipment-date="@shipment.Date"
                                            data-shipment-status="@shipment.Statusid"
                                            data-shipment-user="@shipment.Userid"
                                            data-shipment-items="@ViewBag.ShipmentItemsJson[shipment.Id]">
                                        <i class="fas fa-edit"></i>
                                    </button>
                                    <form method="post" asp-action="CancelShipment" asp-controller="Shipments" asp-route-id="@shipment.Id" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-warning"><i class="fas fa-ban"></i> Отменить поставку</button>
                                    </form>
                                }
                                @if (User.HasClaim(ClaimTypes.Role, "Кладовщик") || isProcurementManagerOrAdmin) 
                                {
                                    <form method="post" asp-action="MarkAsArrived" asp-controller="Shipments" asp-route-id="@shipment.Id" style="display:inline;">
                                        <button type="submit" class="btn btn-sm btn-info"><i class="fas fa-truck"></i> Поставка пришла</button>
                                    </form>
                                }
                            }
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>

    <!-- Модальное окно для добавления поставки -->
    <div class="modal fade" id="addShipmentModal" tabindex="-1" role="dialog" aria-labelledby="addShipmentModalLabel" aria-hidden="true">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="addShipmentModalLabel">Добавить поставку</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="CreateShipment" asp-controller="Shipments" id="shipmentForm">
                        <div class="form-group">
                            <label>Товары:</label>
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Товар</th>
                                        <th>Вес</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (Product product in ViewBag.Products)
                                    {
                                        <tr>
                                            <td>
                                                @product.Name
                                                <input type="hidden" name="ProductIds" value="@product.Id" />
                                            </td>
                                            <td>
                                                <div class="input-group">
                                                    <div class="input-group-prepend">
                                                        <button type="button" class="btn btn-outline-secondary quantity-minus" data-product-id="@product.Id"><i class="fas fa-minus"></i></button>
                                                    </div>
                                                    <input type="number" class="form-control quantity-input" step="0.01" name="Quantities[@product.Id]" value="0" min="0" data-product-id="@product.Id">
                                                    <div class="input-group-append">
                                                        <button type="button" class="btn btn-outline-secondary quantity-plus" data-product-id="@product.Id"><i class="fas fa-plus"></i></button>
                                                    </div>
                                                </div>
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>


                        <button type="submit" class="btn btn-primary">Сохранить</button>
                    </form>
                </div>
            </div>
        </div>
    </div>

    <!-- Модальное окно для редактирования поставки -->
    <div class="modal fade" id="editShipmentModal" tabindex="-1" role="dialog" aria-labelledby="editShipmentModalLabel" aria-hidden="true">
        <div class="modal-dialog modal-lg" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <h5 class="modal-title" id="editShipmentModalLabel">Редактировать поставку</h5>
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                        <span aria-hidden="true">&times;</span>
                    </button>
                </div>
                <div class="modal-body">
                    <form method="post" asp-action="EditShipment" asp-controller="Shipments" id="editShipmentForm">
                        <input type="hidden" id="editShipmentId" name="Id" />
                        <div class="form-group">
                            <label>Товары:</label>
                            <table class="table table-bordered">
                                <thead>
                                    <tr>
                                        <th>Товар</th>
                                        <th>Вес</th>
                                    </tr>
                                </thead>
                                <tbody id="editShipmentItems">
                                    @* Сюда будут добавлены строки с товарами через JavaScript *@
                                </tbody>
                            </table>
                        </div>


                        <button type="submit" class="btn btn-primary">Сохранить</button>
                    </form>
                </div>
            </div>
        </div>
    </div>


</section>

@section Scripts {
    <script>
        // Скрипт для добавления поставки
        document.addEventListener('DOMContentLoaded', function() {
            // Обработчик отправки формы добавления поставки
            const form = document.getElementById('shipmentForm');

            form.addEventListener('submit', function(e) {
                const quantityInputs = document.querySelectorAll('.quantity-input');
                let hasSelectedProducts = false;

                quantityInputs.forEach(input => {
                    if (parseFloat(input.value) > 0) {
                        hasSelectedProducts = true;
                    }
                });

                if (!hasSelectedProducts) {
                    e.preventDefault();
                    alert('Выберите хотя бы один товар с количеством больше 0!');
                    return false;
                }
                return true;
            });

            // Кнопки +/- для количества товаров
            document.querySelectorAll('.quantity-plus').forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.dataset.productId;
                    const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                    input.value = (parseFloat(input.value) || 0) + 1;
                });
            });

            document.querySelectorAll('.quantity-minus').forEach(button => {
                button.addEventListener('click', function() {
                    const productId = this.dataset.productId;
                    const input = document.querySelector(`.quantity-input[data-product-id="${productId}"]`);
                    const newValue = (parseFloat(input.value) || 0) - 1;
                    input.value = newValue >= 0 ? newValue : 0;
                });
            });
        });

        // Скрипт для редактирования поставки (jQuery)
        $(document).ready(function() {
            // Открытие модального окна редактирования
            $('.edit-product-btn').click(function() {
                var shipmentId = $(this).data('shipment-id');
                var shipmentItems = $(this).data('shipment-items');

                $('#editShipmentId').val(shipmentId);
                var shipmentItemsTableBody = $('#editShipmentItems');
                shipmentItemsTableBody.empty();

                if (shipmentItems && shipmentItems.length > 0) {
                    $.each(shipmentItems, function(index, item) {
                        var row = `
                            <tr>
                                <td>
                                    ${item.Product.Name}
                                    <input type="hidden" name="ProductIds" value="${item.Productid}" />
                                </td>
                                <td>
                                    <input type="number" class="form-control" step="0.01"
                                           name="Quantities[${item.Productid}]" value="${item.Weight}" min="0">
                                </td>
                            </tr>
                        `;
                        shipmentItemsTableBody.append(row);
                    });
                } else {
                    shipmentItemsTableBody.append('<tr><td colspan="2">Нет товаров в поставке</td></tr>');
                }
            });

            // Очистка модального окна при закрытии
            $('#editShipmentModal').on('hidden.bs.modal', function() {
                $("#editShipmentItems").empty();
            });
        });

        // Дополнительный скрипт для управления статусами поставки
        document.addEventListener('DOMContentLoaded', function() {
            // Подтверждение действий с поставкой
            document.querySelectorAll('form[action*="ConfirmUnloading"], form[action*="CancelShipment"], form[action*="MarkAsArrived"]')
                .forEach(form => {
                    form.addEventListener('submit', function(e) {
                        if (!confirm('Вы уверены, что хотите выполнить это действие?')) {
                            e.preventDefault();
                        }
                    });
                });
        });
        $(document).ready(function() {
            $('#toggleHiddenBtn').click(function() {
                const showHidden = !@Json.Serialize(ViewBag.ShowHidden);

                // Просто переходим по ссылке с новым параметром
                window.location.href = '@Url.Action("Index")' + '?showHidden=' + showHidden;
            });
        });
    </script>
}